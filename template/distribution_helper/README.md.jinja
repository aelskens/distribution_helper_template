# Distribution helper

This folder contains scripts and files to help you deploy a RayCluster with specific ressources onto a K8S cluster for your application.

This is based on [Ray's official documentation](https://docs.ray.io/en/latest/cluster/kubernetes/getting-started/raycluster-quick-start.html#kuberay-raycluster-quickstart).

## Structure

```
├── Dockerfile                <- The Dockerfile to build the extended image that includes the necessary instructions for proper Ray Pods functionality.
├── build_N_publish_image.sh  <- The script that builds the image for the pods by extending the given base image and publishes it.
│
├── deploy.sh                 <- The script that deploys the desired resources onto the K8S cluster.
└── teardown.sh               <- The script that removes the deployment from the K8S cluster.
```

## Usage

### 1. Build and publish the image that will be used for the cluster's pods

Use `build_N_publish_image.sh` to build the pods' image. This script will build an image named `{{ pod_image }}` and will try to publish it onto DockerHub. **Alternatively**, you can do this step manually by using the Dockerfile to extend your base image (`{{ base_image }}`). **MAKE SURE** to either use this name: `{{ pod_image }}` for the resulting image or to change the name accordingly to what you have chosen in `deploy.sh`.

> [!NOTE]  
> The base image from which the Ray Pods one will be derived should already have a non-root user.

### 2. Deploy the RayCluster with the desired ressources

Use `deploy.sh` to deploy the RayCluster under the namespace `distributed-ray`.

Additionally, you can overwrite some of the values defined in `deploy.sh` under the "Variable definition" section using the CLI. Use `deploy.sh --help` for more information.

### 3. Teardown the RayCluster

Use `teardown.sh` to teardown the RayCluster.